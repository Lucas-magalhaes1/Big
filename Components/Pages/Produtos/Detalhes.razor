@page "/Produtos/Detalhes/{id:int}"
@using System.Globalization
@using Big.Models
@using Big.Services
@inject ProdutoService ProdutoService
@inject NavigationManager Navigation

<h3>Detalhes do Produto</h3>

@if (produto == null)
{
    <p>Carregando informações do produto...</p>
}
else
{
    <div class="card">
        <div class="card-header">
            <h4>@produto.Nome</h4>
        </div>
        <div class="card-body">
            <p><strong>Descrição:</strong> @produto.Descricao</p>
            <p><strong>Preço:</strong> @produto.Preco.ToString("C", CultureInfo.GetCultureInfo("pt-BR"))</p>
            <p><strong>Estoque na Loja:</strong> @produto.EstoqueLoja</p>
            <p><strong>Estoque no Centro de Distribuição:</strong> @produto.EstoqueCentroDistribuicao</p>
            <p><strong>Categoria:</strong> @produto.Categoria?.Nome</p>
            @if (!string.IsNullOrEmpty(produto.ImagemUrl))
            {
                <p><strong></strong></p>
                <img src="@produto.ImagemUrl" alt="Imagem do Produto" class="img-fluid" style="max-width: 300px;" />
            }
        </div>
        <div class="card-footer">
            <a href="/Produtos" class="btn btn-secondary" @onclick="Voltar">Voltar</a>
        </div>
    </div>
}

@code {
    [Parameter] public int Id { get; set; }

    private Produto produto;

    protected override async Task OnInitializedAsync()
    {
        produto = await ProdutoService.ObterPorIdComCategoriaAsync(Id);
    }

    private void Voltar()
    {
        Navigation.NavigateTo("/produtos");
    }
}