@page "/Produtos/Excluir/{id:int}"
@using Big.Models
@using Big.Services
@inject ProdutoService ProdutoService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h3>Excluir Produto</h3>

@if (produto == null)
{
    <p>Carregando informações do produto...</p>
}
else
{
    @if (mostrarFeedback)
    {
        <div class="alert alert-success" role="alert">
            Produto excluído com sucesso!
        </div>
    }

    <div class="card border-danger mt-4">
        <div class="card-header bg-danger text-white">
            Atenção: Exclusão de Produto
        </div>
        <div class="card-body">
            <p class="card-text">
                Tem certeza que deseja excluir o produto <strong>@produto.Nome</strong>?
                Esta ação não pode ser desfeita.
            </p>
            <div class="mt-3">
                <button type="button" class="btn btn-danger" @onclick="ExcluirProduto">Excluir</button>
                <a href="/Produtos" class="btn btn-secondary">Cancelar</a>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Produto produto = new Produto();
    private bool mostrarFeedback = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            produto = await ProdutoService.ObterPorIdAsync(Id);
            if (produto == null)
            {
                Navigation.NavigateTo("/Produtos");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao carregar o produto: {ex.Message}");
            Navigation.NavigateTo("/Produtos");
        }
    }

    private async Task ExcluirProduto()
    {
        try
        {
            await ProdutoService.ExcluirAsync(Id);

            // Exibe a mensagem de feedback
            mostrarFeedback = true;
            StateHasChanged();

            // Redireciona para a página de produtos após um curto delay
            await Task.Delay(1000);
            Navigation.NavigateTo("/Produtos");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao excluir o produto: {ex.Message}");
        }
    }
}
