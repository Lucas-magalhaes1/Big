@page "/Produtos/Adicionar"
@using Big.Models
@using Big.Services
@inject ProdutoService ProdutoService
@inject CategoriaService CategoriaService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h1>Adicionar Produto</h1>

<EditForm Model="@novoProduto" OnValidSubmit="OnValidSubmitAsync">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Nome do Produto</label>
        <InputText @bind-Value="novoProduto.Nome" class="form-control" />
        <ValidationMessage For="@(() => novoProduto.Nome)" />
    </div>

    <div class="mb-3">
        <label class="form-label">Descrição</label>
        <InputTextArea @bind-Value="novoProduto.Descricao" class="form-control" />
        <ValidationMessage For="@(() => novoProduto.Descricao)" />
    </div>

    <div class="mb-3">
        <label class="form-label">Preço</label>
        <InputNumber @bind-Value="novoProduto.Preco" class="form-control" />
        <ValidationMessage For="@(() => novoProduto.Preco)" />
    </div>

    <div class="mb-3">
        <label class="form-label">Estoque Loja</label>
        <InputNumber @bind-Value="novoProduto.EstoqueLoja" class="form-control" />
        <ValidationMessage For="@(() => novoProduto.EstoqueLoja)" />
    </div>

    <div class="mb-3">
        <label class="form-label">Estoque Centro de Distribuição</label>
        <InputNumber @bind-Value="novoProduto.EstoqueCentroDistribuicao" class="form-control" />
        <ValidationMessage For="@(() => novoProduto.EstoqueCentroDistribuicao)" />
    </div>

    <div class="mb-3">
        <label class="form-label">URL da Imagem</label>
        <InputText @bind-Value="novoProduto.ImagemUrl" class="form-control" />
        <ValidationMessage For="@(() => novoProduto.ImagemUrl)" />
    </div>

    <div class="mb-3">
        <label class="form-label">Categoria</label>
        <InputSelect @bind-Value="novoProduto.CategoriaId" class="form-control">
            <option value="" disabled selected>Selecione uma categoria</option>
            @foreach (var categoria in categorias)
            {
                <option value="@categoria.Id">@categoria.Nome</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => novoProduto.CategoriaId)" />
    </div>

    <button type="submit" class="btn btn-primary">Salvar</button>
    <a href="/Produtos" class="btn btn-secondary">Cancelar</a>
</EditForm>

@code {
    private Produto novoProduto = new Produto();
    private List<Categoria> categorias = new();

    protected override async Task OnInitializedAsync()
    {
        categorias = await CategoriaService.ObterTodasAsync();
    }

    private async Task OnValidSubmitAsync()
    {
        try
        {
            if (novoProduto.CategoriaId == null || novoProduto.CategoriaId == 0)
            {
                Console.WriteLine("A categoria do produto é obrigatória.");
                return;
            }

            await ProdutoService.AdicionarAsync(novoProduto);
            Navigation.NavigateTo("/Produtos");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao adicionar o produto: {ex.Message}");
        }
    }
}
