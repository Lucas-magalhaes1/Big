@page "/Dashboard"
@using System.Globalization
@inherits Big.Pages.Dashboard.DashboardBase
@rendermode InteractiveServer

<h3><i class="bi bi-speedometer2"></i> Dashboard de Vendas</h3>

<MudPaper Class="pa-4 mb-4" Style="background-color: #f8f9fa; border-radius: 8px;">
    <div class="row">
        <div class="col-md-4">
            <label class="form-label">Selecione o MÃªs</label>
            <InputSelect class="form-control" @bind-Value="mesSelecionado" @onchange="AtualizarDados">
                @for (int i = 1; i <= 12; i++)
                {
                    <option value="@i">@CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)</option>
                }
            </InputSelect>
        </div>
        <div class="col-md-4">
            <label class="form-label">Selecione o Ano</label>
            <InputSelect class="form-control" @bind-Value="anoSelecionado" @onchange="AtualizarDados">
                @for (int i = 2022; i <= DateTime.Now.Year; i++)
                {
                    <option value="@i">@i</option>
                }
            </InputSelect>
        </div>
    </div>
</MudPaper>

<div class="row">
    <div class="col-md-3"><MudPaper Class="pa-3 bg-primary text-white"><h5>Pedidos no mÃªs</h5><p class="fs-4">@mockPedidos.Count</p></MudPaper></div>
    <div class="col-md-3"><MudPaper Class="pa-3 bg-success text-white"><h5>Total Faturado</h5><p class="fs-4">@mockPedidos.Sum(p => p.Total).ToString("C")</p></MudPaper></div>
    <div class="col-md-3"><MudPaper Class="pa-3 bg-warning text-white"><h5>Pedidos Aprovados</h5><p class="fs-4">@mockPedidos.Count(p => p.Status == "Aprovado")</p></MudPaper></div>
    <div class="col-md-3"><MudPaper Class="pa-3 bg-danger text-white"><h5>Pedidos Rejeitados</h5><p class="fs-4">@mockPedidos.Count(p => p.Status == "Rejeitado")</p></MudPaper></div>
</div>

<div class="row mt-4">
    <div class="col-md-6">
        <h5>ðŸ“ˆ EvoluÃ§Ã£o de Vendas</h5>
        <MudChart ChartType="ChartType.Line" ChartSeries="@seriesVendas" XAxisLabels="@labelsMeses" Width="100%" Height="350px"></MudChart>
    </div>
    <div class="col-md-6">
        <h5>ðŸ“Š Pedidos por Status</h5>
        <MudPaper Class="pa-4">
            <MudChart ChartType="ChartType.Pie" InputData="@dadosStatus" InputLabels="@labelsStatus" Width="100%" Height="300px" />
        </MudPaper>
    </div>
</div>

<div MudPaper Class="pa-3 bg-info text-white">
    <h5>Ticket MÃ©dio</h5>
    <p class="fs-4">@MediaTicket.ToString("C")</p>
</div>

<h4 class="mt-4">ðŸ“‹ Ãšltimos Pedidos</h4>
<table class="table table-striped">
    <thead>
        <tr>
            <th>ID</th>
            <th>Cliente</th>
            <th>Status</th>
            <th>Total</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var pedido in mockPedidos.OrderByDescending(p => p.DataPedido).Take(5))
        {
            <tr>
                <td>@pedido.Id</td>
                <td>@pedido.ClienteNome</td>
                <td><span class="badge @(pedido.Status == "Aprovado" ? "bg-success" : pedido.Status == "Rejeitado" ? "bg-danger" : "bg-warning")">@pedido.Status</span></td>
                <td>@pedido.Total.ToString("C")</td>
            </tr>
        }
    </tbody>
</table>
